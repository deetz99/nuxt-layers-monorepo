name: pkg-pr-new
on: 
  push:
    paths: 
      - 'packages/**'
    pull_request: 
      - 'packages/**'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: read  

    steps:
    - name: Checkout code repository
      uses: actions/checkout@v4

    - name: Determine changes in packages
      uses: dorny/paths-filter@v3
      id: changes
      with: 
        filters: |
          base:
            - 'packages/base-ui/**'  
          accounts:
            - 'packages/accounts/**'  
          forms:
            - 'packages/forms/**'  
          pay:
            - 'packages/pay/**'
    
    - name: Create package list
      id: package_list
      if: steps.changes.outputs.base == 'true' || steps.changes.outputs.accounts == 'true' || steps.changes.outputs.forms == 'true' || steps.changes.outputs.pay == 'true'
      run: |
        PACKAGE_LIST=""
        if [ "${{ steps.changes.outputs.base }}" == "true" ]; then
          PACKAGE_LIST+="./packages/base-ui "
        fi
        if [ "${{ steps.changes.outputs.accounts }}" == "true" ]; then
          PACKAGE_LIST+="./packages/accounts "
        fi
        if [ "${{ steps.changes.outputs.forms }}" == "true" ]; then
          PACKAGE_LIST+="./packages/forms "
        fi
        if [ "${{ steps.changes.outputs.pay }}" == "true" ]; then
          PACKAGE_LIST+="./packages/pay "
        fi
        echo "PACKAGES_TO_PUBLISH=${PACKAGE_LIST}"
        echo "list=${PACKAGE_LIST}" >> $GITHUB_OUTPUT

    - name: Setup pnpm
      if: steps.package_list.outputs.list != ''
      uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Setup node.js
      if: steps.package_list.outputs.list != ''
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
    
    - name: Install dependencies
      if: steps.package_list.outputs.list != ''
      run: pnpm install

    - name: Publish Changed Packages
      if: steps.package_list.outputs.list != ''
      run: npx pkg-pr-new publish ${{ steps.package_list.outputs.list }} --packageManager=pnpm
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      