name: 'Comment Trigger: E2E'

on:
  # This action triggers when a comment is created on a pull request
  issue_comment:
    types: [created]

# Concurrency ensures that only one instance of this workflow runs per PR for the same comment trigger.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  trigger-e2e-workflows:
    # This job only runs if:
    # 1. The comment is on a PR.
    # 2. The comment body contains "/e2e".
    # 3. The commenter has write access to the repository (Owner, Member, or Collaborator).
    if: >-
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/e2e') &&
      (
        github.event.comment.author_association == 'MEMBER' ||
        github.event.comment.author_association == 'OWNER' ||
        github.event.comment.author_association == 'COLLABORATOR'
      )
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      actions: write
      issues: write

    steps:
      - name: 'Log the trigger'
        run: |
          echo "Workflow triggered by /e2e comment on PR #${{ github.event.issue.number }} by @${{ github.event.comment.user.login }}."

      # MODIFIED: Checkout must happen BEFORE any git-dependent commands like 'gh'.
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      # Get PR info and a list of all changed files from the GitHub API.
      - name: 'Get PR changed files'
        id: pr_files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
        run: |
          PR_DATA=$(gh pr view $PR_NUMBER --json headRefName,files --jq '{headRefName, files: .files | map(.path)}')
          echo "pr_branch=$(echo $PR_DATA | jq -r .headRefName)" >> $GITHUB_OUTPUT
          echo "changed_files=$(echo $PR_DATA | jq -c .files)" >> $GITHUB_OUTPUT

      # Based on the file list, determine which packages have changed.
      - name: 'Determine changed packages'
        id: filter
        run: |
          files='${{ steps.pr_files.outputs.changed_files }}'
          declare -A changed_packages

          # Define your package paths here
          # The key is the package name (e.g., 'auth') and the value is the path pattern.
          declare -A package_paths=(
            ["base"]="packages/layers/base/"
            ["auth"]="packages/layers/auth/"
            ["forms"]="packages/layers/forms/"
            ["pay"]="packages/layers/pay/"
          )

          for file in $(echo "$files" | jq -r '.[]'); do
            for pkg in "${!package_paths[@]}"; do
              if [[ "$file" == "${package_paths[$pkg]}"* ]]; then
                changed_packages["$pkg"]=1
              fi
            done
          done
          
          if [ ${#changed_packages[@]} -eq 0 ]; then
            echo "changed_filters=[]" >> $GITHUB_OUTPUT
          else
            # Output a JSON array of the changed package names
            filters=$(printf '"%s",' "${!changed_packages[@]}" | sed 's/,$//')
            echo "changed_filters=[$filters]" >> $GITHUB_OUTPUT
          fi

      # Use the filtered list to trigger the correct workflows.
      - name: 'Trigger E2E workflows for changed packages'
        if: steps.filter.outputs.changed_filters != '[]'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_BRANCH: ${{ steps.pr_files.outputs.pr_branch }}
          CHANGED_FILTERS: ${{ steps.filter.outputs.changed_filters }}
        run: |
          echo "Changed packages: $CHANGED_FILTERS"
          echo "PR Branch: $PR_BRANCH"

          for pkg in $(echo "$CHANGED_FILTERS" | jq -r '.[]'); do
            workflow_name="e2e-${pkg}.yml"
            echo "-> Triggering workflow: $workflow_name for branch $PR_BRANCH"
            gh workflow run "$workflow_name" --ref "$PR_BRANCH" || echo "Warning: Workflow '$workflow_name' not found or failed to trigger."
          done

      - name: 'Add comment confirming the trigger'
        uses: actions/github-script@v7
        with:
          script: |
            const changedPackages = JSON.parse('${{ steps.filter.outputs.changed_filters }}');
            let body;

            if (changedPackages.length > 0) {
              const packageList = changedPackages.map(p => `\`${p}\``).join(', ');
              body = `✅ E2E test workflows have been triggered for the following packages: ${packageList}.`;
            } else {
              body = `ℹ️ The /e2e command was used, but no changes were found in any packages.`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });