name: 'Comment Trigger: E2E'

on:
  # This action triggers when a comment is created on a pull request
  issue_comment:
    types: [created]

# Concurrency ensures that only one instance of this workflow runs per PR for the same comment trigger.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  trigger-e2e-workflows:
    # This job only runs if:
    # 1. The comment is on a PR.
    # 2. The comment body contains "/e2e".
    # 3. The commenter has write access to the repository (Owner, Member, or Collaborator).
    if: >-
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/e2e') &&
      (
        github.event.comment.author_association == 'MEMBER' ||
        github.event.comment.author_association == 'OWNER' ||
        github.event.comment.author_association == 'COLLABORATOR'
      )
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read # Required to read PR data
      actions: write      # Required to trigger other workflows

    steps:
      - name: 'Log the trigger'
        run: |
          echo "Workflow triggered by /e2e comment on PR #${{ github.event.issue.number }} by @${{ github.event.comment.user.login }}."

      # MODIFIED: Checkout must happen BEFORE any git-dependent commands like 'gh'.
      - name: 'Checkout PR branch'
        uses: actions/checkout@v4
        with:
          # This special ref checks out the state of the PR as if it were merged with the base branch.
          ref: refs/pull/${{ github.event.issue.number }}/merge
          fetch-depth: 0 # Fetch the entire history for an accurate diff

      # Get both head and base branch names first. This step is crucial.
      - name: 'Get PR Info'
        id: pr_info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
        run: |
          PR_DATA=$(gh pr view $PR_NUMBER --json headRefName,baseRefName)
          echo "head_branch=$(echo $PR_DATA | jq -r .headRefName)" >> $GITHUB_OUTPUT
          echo "base_branch=$(echo $PR_DATA | jq -r .baseRefName)" >> $GITHUB_OUTPUT

      # The filter now compares the checked-out HEAD against the correct base branch.
      - name: 'Determine changed packages'
        uses: dorny/paths-filter@v3
        id: filter
        with:
          # The 'base' input tells the action which branch to compare against.
          base: ${{ steps.pr_info.outputs.base_branch }}
          filters: |
            base:
              - 'packages/layers/base/**'
            auth:
              - 'packages/layers/auth/**'
            forms:
              - 'packages/layers/forms/**'
            pay:
              - 'packages/layers/pay/**'

      # Use the branch name from the 'Get PR Info' step.
      - name: 'Trigger E2E workflows for changed packages'
        if: steps.filter.outputs.filters != '[]' # Only run if at least one package changed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_BRANCH: ${{ steps.pr_info.outputs.head_branch }}
          CHANGED_FILTERS: ${{ steps.filter.outputs.filters }}
        run: |
          echo "Changed packages: $CHANGED_FILTERS"
          echo "PR Branch: $PR_BRANCH"

          # Use jq to parse the JSON array and loop through each changed package
          for pkg in $(echo "$CHANGED_FILTERS" | jq -r '.[]'); do
            workflow_name="e2e-${pkg}.yml"
            echo "-> Triggering workflow: $workflow_name for branch $PR_BRANCH"
            
            # Use the GitHub CLI to trigger the specific workflow file for the package
            gh workflow run "$workflow_name" --ref "$PR_BRANCH" || echo "Warning: Workflow '$workflow_name' not found or failed to trigger."
          done

      - name: 'Add comment confirming the trigger'
        uses: actions/github-script@v7
        with:
          script: |
            const changedPackages = JSON.parse('${{ steps.filter.outputs.filters }}');
            let body;

            if (changedPackages.length > 0) {
              const packageList = changedPackages.map(p => `\`${p}\``).join(', ');
              body = `✅ E2E test workflows have been triggered for the following packages: ${packageList}.`;
            } else {
              body = `ℹ️ The /e2e command was used, but no changes were found in any packages.`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });