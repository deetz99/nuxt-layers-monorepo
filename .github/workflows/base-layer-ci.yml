name: Base Layer CI

on:
  pull_request:
    paths:
      - "packages/base-ui/**"
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2]
        shardTotal: [2]
        project: ["base-ui"]
    defaults:
      run:
        working-directory: ./packages/${{ matrix.project }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 24
    - uses: pnpm/action-setup@v4
      with:
        version: 10
        run_install: false
    - name: Expose pnpm config(s) through "$GITHUB_OUTPUT"
      id: pnpm-config
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    - name: Cache node modules
      id: cache-pnpm
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ${{ steps.pnpm-config.outputs.STORE_PATH }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
    - if: ${{ steps.cache-pnpm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: pnpm list
    - name: Install dependencies
      run: pnpm -F @dwol/base-layer install
    - name: Cache node modules 2
      id: cache-pnpm-2
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ${{ steps.pnpm-config.outputs.STORE_PATH }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
    - if: ${{ steps.cache-pnpm-2.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: pnpm list
    - name: Install dependencies
      run: pnpm -F @dwol/accounts-layer install
    - name: Install Playwright browsers
      run: npx playwright install chromium --only-shell
    - name: build
      run: pnpm build
    - name: preview
      run: pnpm preview&
    - name: Run Playwright tests
      run: pnpm test:e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} 
